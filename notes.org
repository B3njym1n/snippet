* The C Library Reference Guide
  [[http://www.fortran-2000.com/ArnaudRecipes/Cstd/][The C Library Reference Guide]]

* Meta programming Javascript
  [[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Meta_programming][MDN]]
  
* Metaprogramming Java
  [[http://inkblotsoftware.com/articles/metaprogramming-java-intro/][inkblotsoftware.com]]

* Metaprogramming custom c
 [[https://www.chiark.greenend.org.uk/~sgtatham/mp/][with coroutine]] 
 
* c-for-dummies
  [[https://c-for-dummies.com][c-for-dummies]]

* PID Loop Simulator
  [[http://engineers-excel.com/Apps/PID_Simulator/Description.htm?msclkid=1e0fab73b71b11ecbec976238dc1b4db][Engineers-Excel]]
  The PID Loop Simulator is an Excel tool to simulate a Proportional, Integral and Derivative (PID) controller on a First Order Time Delay (FOTPD) process. Both open and closed loop processes can be simulated using this powerful tool. This is a great tool for learning the basics of PID control and loop tuning.
  [[http://www.grauonline.de/alexwww/ardumower/pid/pid.html?msclkid=1e0d7aabb71b11ec9d405edc1ed89b74][grauonline]]
  online PID controller simulator

* Java Serial Port Code
  [[https://www.tabnine.com/code/java/classes/com.fazecast.jSerialComm.SerialPort][tabnine]]

  
* OpenSource LIMSs
  [[https://www.senaite.com/docs/installation.html][SENAITE is an add-on for the Plone Content Management Framework]]

  
* gnuplot
  [[http://www.gnuplot.info/demo/][demo]]

* Busy Developer'Guide POI
  [[https://poi.apache.org/components/spreadsheet/quick-guide.html#XSSFHeaderFooter][Busy Developers' Guide to HSSF and XSSF Features]]

* [[https://brantou.github.io/2017/03/21/just-try/][Org-mode手册]]

* vavr
  [[https://apiumhub.com/tech-blog-barcelona/functional-java-with-vavr/?msclkid=4605c99dc36511ec915e7ba025bc9cbe][java with vavr]]

* Junit5 and assertJ
  [[https://www.petrikainulainen.net/programming/testing/junit-5-tutorial-writing-assertions-with-assertj/][JUnit5 Tutorial With AssertJ]]

* functional programming java tutorial
  [[https://www.tutorialspoint.com/functional_programming_with_java/functional_programming_with_java_returning_function.htm][tutorialspoint]]

* serial api
  [[https://juejin.cn/post/6991629833680158727][juejin]]

  
* 来自扫码枪应用适配的经验及扩展。
查了好多资料，发现实现思路不外乎以下几种：

1.使用服务端开发语言开发一个读取串口数据的本地服务模块，并实现websocket长连接支持，前端开启长连接到该服务，根据推送的数据进行操作。
2.针对IE浏览器，可以采用ActiveX插件读取串口数据，根据插件的API进行开发。
3.对于chrome浏览器，可以使用Chrome.serial实现
————————————————
版权声明：本文为CSDN博主「我爱吃豆芽呀」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/woaidouya123/article/details/105681003

* v2as
  [[  https://v2as.com/
][v2as]]

* websocket webassembly
  [[https://cntofu.com/book/150/zh/ch5-net/ch5-02-websocket.md][wasm]]

  
* webdev
  [[https://cntofu.com/book/150/zh/ch5-net/ch5-02-websocket.md][usb]]
  [[https://web.dev/serial/][serial]]

* junit5并发配置及操作
  [[https://www.jianshu.com/p/814d77e0ddab][junit5并发配置及操作]]